<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="description" content="">
        <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
        <meta name="generator" content="Hugo 0.101.0">
        <title>Getting Started - Nexus</title>
        <link rel="stylesheet" href="/ui/css/common_combined.css">
        <style>
            #Player {
                position: relative;
                background-color: aliceblue;
            }
            #Studio {
                position: absolute;
                left: -400px;
                top: -305px;
            }
            .cc {
                position: absolute;
                left: -300px;
                top: -300px;
            }
            #stuff {
                position: absolute;
                background-color: azure;
                left: -150px;
                top: -300px;
            }
            .custom_studio {
                width: 991px;
            }
            @font-face {
                font-family: 'Lato';
                font-style: normal;
                font-weight: 400;
                src: local('Lato Regular'), local('Lato-Regular'), url(/ui/fonts/qIIYRU-oROkIk8vfvxw6QvesZW2xOQ-xsNqO47m55DA.woff) format('woff');
            }
            @font-face {
                font-family: 'Lato';
                font-style: normal;
                font-weight: 700;
                src: local('Lato Bold'), local('Lato-Bold'),
                url(/ui/fonts/qdgUG4U09HnJwhYI-uK18wLUuEpTyoUstqEm5AMlJo4.woff) format('woff');
            }
        </style>
        <script type="text/javascript">
            var srv_tz_os = -4, view_name = "go", user_cookie_name = "u_info";
        </script>
        <script src="/js/common_combined.js"></script>
        <script src="https://fireanimate-eb62d.firebaseapp.com/__/firebase/6.2.4/firebase-app.js"></script>
        <script src="https://fireanimate-eb62d.firebaseapp.com/__/firebase/6.2.4/firebase-auth.js"></script>
        <script src="https://fireanimate-eb62d.firebaseapp.com/__/firebase/init.js"></script>
        <script src="/js/user.js"></script>
        <script src="/lvm_files/go/js/jquery/jquery.swfobject.min.js"></script>
        <script src="/lvm_files/go/js/jquery/jquery.blockUI-2.66.0.js"></script>
        <script src="/lvm_files/go/js/jquery/jquery.scrollTo.min.js"></script>
        <script src="/lvm_files/go/js/Gettext.js"></script>
        <script type="text/javascript" src="/lvm_files/go/po/goserver_js-en_US.json"></script>
        <script type="text/javascript">
            var I18N_LANG = 'en_US';
            var GT = new Gettext({'locale_data': json_locale_data});
        </script>
    </head>
    <body class="en_US">
        <form class="modal" id="getting_started_modal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h3 class="modal-title">Getting Started</h3>
                    </div>
                    <div class="modal-body">
                        <div id="getting_started_header"></div>
                        <hr>
                        <div id="getting_started_body"></div>
                        <hr>
                        <div id="getting_started_footer"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" onclick="go('prev')" id="get_started_prev" class="btn btn-primary disabled">< Previous</button>
                        <button type="button" onclick="go('next')" id="get_started_next" class="btn btn-primary">Next ></button>
                    </div>
                </div>
            </div>
        </form>
        <div class="lightbox" id="video_share" style="display: none;">
            <div class="lightbox_wrapper">
                <h3 class="modal-title">Sharing a video</h3>
                <hr>
                <h4 class="compact">Below you may share the url of this video to users who are logged in to Nexus.</h4>
                <p>Anyone who isn't logged in to Nexus will have no access to this video.</p>
                <div class="row">
                    <div class="col-md-6">
                        <div class="input-group">
                            <span class="input-group-addon">URL</span>
                            <input id="videoShareURL" class="form-control" type="text" onclick="this.focus(); this.select();" readonly style="margin: 0px; width: 540px; height: 35px;"/>
                        </div>
                    </div>
                </div>
                <center><button class="btn btn-default" type="button" onclick="hideOverlayOnElement()">Close</button></center>
                <a onclick="hideOverlayOnElement()" class="close_btn">&#215;</a>
            </div>
        </div>
        <script type="text/javascript">
            function blockCustomStudio(elem, c, type, css) {
                const config = {
                    message: elem,
                    css: {
                        cursor: 'auto',
                        width: '640px'
                    },
                    overlayCSS: {
                        cursor: 'auto',
                    }
                };
                if (c && typeof c == "object") for (const i in c) config[i] = c[i];
                if (css && typeof css == "object" && type) for (const i in css) config[type][i] = css[i];
                console.log(config);
                $(".getting_started_custom_lvm_video_maker").block(config);
            }
            function shareMyVideo(mId) {
                $("#videoShareURL").val(`${window.location.origin}/videos?movieId=${mId}`);
                showOverlayOnElement("#getting_started_modal", $("#video_share"))
            }
            var chars, movies;
            function checkUserChars() {
                $("#getting_started_modal").block();
                $.post("/api/getChars", {
                    userId: userData.id || userData.uid,
                    cc_theme_id: $("#themes_selector").val(),
                }, e => {
                    const d = JSON.parse(e);
                    if (d[0] && !d[0].error && d[0].id) {
                        chars = d;
                        goTo('themes_selector');
                    } else {
                        $("#getting_started_modal").unblock();
                        alert(d && d[0] && d[0].error ? d[0].error : "You have not created any characters yet.")
                    }
                });
            }
            function checkUserVideos(callback) {
                $("#getting_started_modal").block();
                $.getJSON(`/movieList?uid=${userData.id || userData.uid}`, d => {
                    if (d[0]) {
                        movies = d;
                        if (callback && typeof callback == "function") callback();
                        else goTo('video_management');
                    } else {
                        $("#getting_started_modal").unblock();
                        alert("You have not created any videos yet.")
                    }
                });
            }
            var movieDataXmlStr;
            function closeWindow(isSaveVideo = false) {
                if (getting_started_html_config.current == "custom_lvm") {
                    $(".getting_started_custom_lvm_video_maker").unblock()
                    if (isSaveVideo) $("#custom_studio")[0].onExternalPreviewPlayerPublish();
                } else {
                    $("#stuff").html('');
                    $("#Studio").css("height", "");
                    if (isSaveVideo) $("#Studio")[0].onExternalPreviewPlayerPublish();
                }
            }
            function beginImport() {
                const elem = getting_started_html_config.current == "custom_lvm" ? "#custom_studio" : "#Studio"
                function importFailed(e) {
                    const html = '<a style="float: right;" href="javascript:closeWindow()">×</a><h4 style="float: left;">Import Failed</h4><br><hr><p>Something in Nexus\'s servers has failed that caused your asset not to import successfully and that\'s okay, it happens! you can close this window and try to import your asset again. here is the error you have gotten:</p><br><hr>' + 
                    `<small>${typeof e != "string" ? e.toString() : e}</small>`
                    + '<hr><a class="btn btn-orange" href="javascript:closeWindow()">Close</a><br>'
                    if (elem != "#custom_studio") {
                        $("#stuff").unblock();
                        $("#stuff").html(html);
                    } else blockCustomStudio(html)
                }
                jQuery("#stuff").block();
                let b = new FormData();
                b.append("file", $("#fileImport")[0].files[0]);
                b.append("subtype", $("#subtype_selector").val());
                b.append("userId", userData.id || userData.uid);
                $.ajax({
                    url: "/ajax/saveUserProp",
                    method: "POST",
                    data: b,
                    success: (d) => {
                        if (d.suc) {
                            const importType = d.asset_data.type == "sound" ? d.asset_data.subtype : d.asset_data.type;
                            $(elem)[0].importerUploadComplete(importType, d.id, d.asset_data);
                            const html = '<a style="float: right;" href="javascript:closeWindow()">×</a><h4 style="float: left;">Import Complete!</h4><br><hr>' + 
                            `<p>Because your asset has been imported to Nexus successfully, you may now use the asset you just imported in your video. to find your asset, go to the Your Library section in the dropdown menu in the top left corner of the lvm and find your asset based off of the file type you choose for your asset.</p><br>`
                            + '<hr><a class="btn btn-orange" href="javascript:closeWindow()">Close</a><br>'
                            if (elem != "#custom_studio") {
                                $("#stuff").unblock();
                                $("#stuff").html(html);
                            } else blockCustomStudio(html);
                        } else importFailed(d.msg);
                    },
                    fail: importFailed,
                    processData: false,
                    contentType: false,
                    dataType: "json"
                });
            }
            function importerUpdate(obj) {
                const subtypes = {
                    image: `<option value="bg">Background</option><option value="prop">Prop</option>`,
                    sound: `<option value="bgmusic">Music</option>
                    <option value="soundeffect">Sound Effect</option>
                    <option value="voiceover">Voice Over</option>`,
                }
                subtypes.mp3 = subtypes.sound;
                subtypes.wav = subtypes.sound;
                subtypes.png = subtypes.image;
                subtypes.jpg = subtypes.image;
                function createImporterHTML() {
                    const v = obj.files[0];
                    const ext = v.name.substring(v.name.lastIndexOf('.') + 1);
                    if (subtypes[ext]) {
                        if ($("#importer_quene").html()) return `You cannot import more than one file at a time.`;
                        return `<tr>
                            <td>${
                                v.name
                            }</td>
                            <td>
                                <select name="subtype" class="form-control" id="subtype_selector">${
                                    subtypes[ext]
                                }</select>
                            </td>
                            <td>
                                <a class="btn btn-orange" href="javascript:beginImport();">Begin File Import</a>
                            </td>
                        </tr>`;
                    } else return `A file named ${v.name} is not supported`;
                }
                $("#importer_quene").html(createImporterHTML);
            }
            function showImporter() {
                const elem = `<a style="float: right;" href="javascript:closeWindow()">×</a>
                <h4 style="float: left;">Importing An Asset</h4>
                <br>
                <hr>
                <p>
                    The Import Window/Sidebar is a place where you can import all of your images/sounds to Nexus so that you can use them in your video.
                </p>
                <br>
                <hr>
                <small>
                    To get started, click on the Select a File button below.
                </small>
                <br>
                <hr>
                <center>
                    <input type="file" name="import" onchange="importerUpdate(this)" id="fileImport"/>
                    <table class="table">
                        <thead>
                            <tr>
                                <td>File Name</td>
                                <td>Import As</td>
                                <td></td>
                            </tr>
                        </thead>
                        <tbody id="importer_quene"></tbody>
                    </table>
                </center>
                <br>
                <hr>
                <a class="btn btn-orange" href="javascript:closeWindow()">Close</a>`;
                if (getting_started_html_config.current != "custom_lvm") {
                    $("#Studio").css("height", "0px");
                    $("#stuff").html(elem)
                } else blockCustomStudio(elem);
            }
            function initPreviewPlayer(dataXmlStr, startFrame) {
                movieDataXmlStr = dataXmlStr;
                const html = '<a style="float: right;" href="javascript:closeWindow()">×</a><h4 style="float: left;">Previewing A Video</h4><br><hr><p>The Preview Window is a place where you can view your video before saving any changes to it. This is really useful for helping you find any mistakes you make while making a video.</p><br><hr>toObjectString<hr><a class="btn btn-orange" href="javascript:closeWindow()">Close</a><a class="btn btn-green" href="javascript:closeWindow()" onclick="document.getElementById(\'Studio\').onExternalPreviewPlayerPublish()">Save & Close</a><br>'
                if (getting_started_html_config.current == "custom_lvm") {
                    getting_started_html_config.custom_player_data.flashvars.v = getting_started_html_config.modalData.year;
                    getting_started_html_config.custom_player_data.flashvars.startFrame = startFrame || 1;
                    getting_started_html_config.custom_player_data.flashvars.isInitFromExternal = 1;
                    getting_started_html_config.custom_player_data.flashvars.autostart = 1;
                    getting_started_html_config.custom_player_attrs.data = `/static/tommy/${
                        getting_started_html_config.modalData.year
                    }/animation/player.swf`
                    getting_started_html_config.custom_player_data.flashvars.clientThemePath = `/static/tommy/${
                        getting_started_html_config.modalData.year
                    }/<client_theme>`
                    blockCustomStudio(html.split("toObjectString").join(toObjectString(
                        getting_started_html_config.custom_player_attrs,
                        getting_started_html_config.custom_player_data
                    )), {
                        centerY: false
                    }, 'css', {
                        top: '0px'
                    });
                } else {
                    getting_started_html_config.player_data.flashvars.startFrame = startFrame || 1;
                    getting_started_html_config.player_data.flashvars.isInitFromExternal = 1;
                    getting_started_html_config.player_attrs.width = "640";
                    $("#Studio").css("height", "0px");
                    $("#stuff").html(html.split("toObjectString").join(toObjectString(
                        getting_started_html_config.custom_player_attrs,
                        getting_started_html_config.custom_player_data
                    )));
                }
            }
            function retrievePreviewPlayerData() { 
                return movieDataXmlStr;
            }
            function toAttrString(table) {
                return typeof table == "object" ? Object.keys(table).filter((key) => table[key] !== null).map(
                    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(table[key])}`
                ).join("&") : table.replace(/"/g, '\\"');
            }
            function toParamString(table) {
                return Object.keys(table).map((key) => `<param name="${key}" value="${
                    toAttrString(table[key])
                }">`).join(" ");
            }
            function toObjectString(attrs, params) {
                return `<div id="stuff"></div><object ${Object.keys(attrs).map((key) => `${key}="${
                    attrs[key].replace(/"/g, '\\"')
                }"`).join(" ")}>${toParamString(params)}</object>`;
            }
            if (self !== top) jQuery('body').hide();
            const getting_started_html_config = {
                modalData: Object.fromEntries(
                    new URLSearchParams($("#getting_started_modal").serialize())
                ),
                start: "welcome_screen",
                current: "welcome_screen",
                custom_player_attrs: {
                    id: "Player", 
                    width: "550", 
                    height: "384", 
                    hasVersion: "10.0.12"
                },
                custom_player_data: {
                    allowScriptAccess: "always",
                    wmode: "transparent",
                    flashvars: {
                        storePath: "/static/tommy/2010/store/<store>",
                        ut: "10",
                        apiserver: window.location.origin + "/",
                        copyable: "0",
                        isPublished: "0",
                        ctc: "go",
                        tlang: "en_US",
                        is_private_shared: "0",
                        autostart: "0",
                        appCode: "go",
                        is_slideshow: "0",
                        isEmbed: "0",
                        refuser: "",
                        utm_source: "",
                        uid: "",
                        isTemplate: "0",
                        showButtons: "1",
                        showshare: "embed",
                        averageRating: "0",
                        ratingCount: "0",
                        fb_app_url: window.location.origin + "/",
                        numContact: ""
                    },
                    scale: "exactfit",
                    allowFullScreen: "true",
                },
                player_attrs: {
                    data: "/static/animation/player.swf",
                    type: "application/x-shockwave-flash",
                    height: "360",
                    id: "Player"
                },
                player_data: {
					flashvars: {
                        apiserver: "/",
                        storePath: "/static/store/<store>",
                        ut: 10,
                        autostart: 1,
                        isWide: 1,
                        isPreview: 1,
                        clientThemePath: "/static/<client_theme>",
                    },
                    allowScriptAccess: "always",
                    allowFullScreen: "true",
				},
                studio_attrs: {
                    data: "/static/animation/go_full.swf",
                    type: "application/x-shockwave-flash",
                    width: `${screen.width}`,
                    height: "630",
                    id: "Studio"
                },
                studio_data: {
					flashvars: {
                        apiserver: "/",
					    storePath: "/static/store/<store>",
					    isEmbed: 1,
					    ctc: "go",
					    ut: 10,
					    appCode: "go",
					    siteId: "13",
					    lid: 13,
                        isWixPaid: 1,
					    clientThemePath: "/static/<client_theme>",
					    tlang: "en_US",
					    isWide: 1,
					    nextUrl: "javascript:showMyVideo('<movieId>')",
                    },
                    allowScriptAccess: "always"
				},
                custom_studio_attrs: {
                    type: "application/x-shockwave-flash",
                    width: `960`,
                    height: "630",
                    id: "custom_studio"
                },
                custom_studio_data: {
					flashvars: {
			            upl: 1,
			            hb: 1,
                        pts: 1,
			            appCode: "go",
			            uisa: 1,
			            isLogin: "Y",
			            tlang: "en_US",
			            isEmbed: 1,
			            isWide: "0",
			            nextUrl: "javascript:showMyVideoUsingLVMYear('<movieId>')",
                        siteId: window.location.host.startsWith("localhost") ? 7 : "go",
                        lid: window.location.host.startsWith("localhost") ? 7 : 13,
			            ut: "10",
                        isOffline: window.location.host.startsWith("localhost") ? 1 : 0,
                        apiserver: window.location.origin + "/",
                        newusr: 1,
                        staticserver: "https://wrapperclassic.netlify.app/"
                    },
                    allowScriptAccess: "always"
				}
            }
            function showMyVideoUsingLVMYear(mId) {
                jQuery("#getting_started_modal").block();
                const oldModalData = getting_started_html_config.modalData;
                goTo('custom_lvp', (json_info, callback) => {
                    checkUserVideos(() => {
                        getting_started_html_config.player_data.flashvars.autostart = 0;
                        delete getting_started_html_config.player_data.flashvars.startFrame;
                        delete getting_started_html_config.player_data.flashvars.isInitFromExternal;
                        getting_started_html_config.custom_player_data.flashvars.clientThemePath = `https://file.garden/ZP0Nfnn29AiCnZv5/static/2012/<client_theme>`;
                        getting_started_html_config.custom_player_data.flashvars.v = oldModalData.year;
                        getting_started_html_config.custom_player_data.flashvars.movieOwnerId = userData.id || userData.uid;
                        getting_started_html_config.custom_player_data.flashvars.movieOwner = userData.displayName;
                        getting_started_html_config.custom_player_data.flashvars.thumbnailURL = `movie_thumbs/${mId}.png`
                        getting_started_html_config.custom_player_data.flashvars.movieId = mId;
                        getting_started_html_config.custom_player_attrs.data = `https://file.garden/ZP0Nfnn29AiCnZv5/animation/${
                            data.year
                        }/player.swf`;
                        jQuery("#getting_started_modal").unblock();
                        callback(json_info);
                    })
                });
            } 
            function showMyVideo(mId) {
                jQuery("#getting_started_modal").unblock();
                goTo('lvp', (json_info, callback) => {
                    checkUserVideos(() => {
                        delete getting_started_html_config.player_data.flashvars.startFrame;
                        delete getting_started_html_config.player_data.flashvars.isInitFromExternal;
                        getting_started_html_config.player_data.flashvars.movieId = mId;
                        getting_started_html_config.player_data.flashvars.movieOwnerId = userData.id || userData.uid;
                        getting_started_html_config.player_attrs.width = "560";
                        jQuery("#getting_started_modal").unblock();
                        callback(json_info);
                    })
                });
            }
            function modifyVideo() {
                goTo('themes_selector', (json_info, callback) => {
                    getting_started_html_config.studio_data.flashvars.movieId = getting_started_html_config.player_data.flashvars.movieId;
                    getting_started_html_config.player_data.flashvars.movieId = "";
                    callback(json_info);
                })
            }
            function newVideo() {
                goTo('themes_selector', (json_info, callback) => {
                    getting_started_html_config.studio_data.flashvars.movieId = "";
                    callback(json_info);
                })
            }
            function quitStudio() {
                jQuery("#getting_started_modal").unblock();
                if (
                    getting_started_html_config.studio_data.flashvars.movieId
                    && getting_started_html_config.current == "lvm"
                ) goTo('lvp');
            }
            function characterSaved() {
                jQuery("#getting_started_modal").unblock();
                goTo("cc_success");
            }
            const interactiveTutorial = {
                show_by_default: true,
                isShowTutorial: true,
                neverDisplay: function(a) {
                    if (a === undefined) {
                        return !this.needToShow()
                    }
                },
                needToShow: function() {
                    return this.isShowTutorial
                }
            };
            function go(direction, callback) {
                getting_started_html_config.modalData = Object.fromEntries(
                    new URLSearchParams($("#getting_started_modal").serialize())
                );
                jQuery("#getting_started_modal").block();
                $(`#get_started_prev`).removeClass("disabled");
                $(`#get_started_next`).removeClass("disabled");
                getting_started_html_config.current = getting_started_html_config[
                    direction
                ] || getting_started_html_config.start;
                getJSONInfoFromConfig().then(function(json_info){
                    if (!json_info.next) $(`#get_started_next`).addClass("disabled");
                    if (!json_info.prev) $(`#get_started_prev`).addClass("disabled");
                    jQuery("#getting_started_modal").unblock();
                    $("#getting_started_modal").modal('hide');
                    if (callback && typeof callback == "function") callback(json_info, showGettingStartedModal);
                    else showGettingStartedModal(json_info);
                });
            }
            function goTo(page, callback) {
                getting_started_html_config.modalData = Object.fromEntries(
                    new URLSearchParams($("#getting_started_modal").serialize())
                );
                jQuery("#getting_started_modal").block();
                $(`#get_started_prev`).removeClass("disabled");
                $(`#get_started_next`).removeClass("disabled");
                getting_started_html_config.current = page || getting_started_html_config.start;
                getJSONInfoFromConfig().then(function(json_info){
                    if (!json_info.next) $(`#get_started_next`).addClass("disabled");
                    if (!json_info.prev) $(`#get_started_prev`).addClass("disabled");
                    jQuery("#getting_started_modal").unblock();
                    $("#getting_started_modal").modal('hide');
                    if (callback && typeof callback == "function") callback(json_info, showGettingStartedModal);
                    else showGettingStartedModal(json_info);
                });
            }
            function getJSONInfoFromConfig() {
                return new Promise((res, rej) => {
                    jQuery.post(`/api/getting_started/${getting_started_html_config.current}`, d => {
                        res(JSON.parse(d));
                    })
                })
            }
            async function getHTMLInfoFromConfig(json) {
                const d = json || await getJSONInfoFromConfig();
                var htmls = {};
                for (const i in d) {
                    getting_started_html_config[i] = d[i];
                    htmls[i] = '';
                    $(`#getting_started_${i}`).html('');
                    for (const e in d[i]) {
                        if (typeof d[i][e] == "string") htmls[i] += `<${e}>${d[i][e]}</${e}>`;
                        else {
                            var attrs = '';
                            for (const g in d[i][e]) {
                                if (g == "html") continue;
                                attrs += `${g}="${d[i][e][g]}" `;
                            }
                            htmls[i] += `<${e} ${attrs}>${d[i][e].html || ""}</${e}>`;
                        }
                    }
                }
                return htmls;
            }
            function openCC(tid, uid) {
                jQuery("#getting_started_modal").block({
                    message: `<iframe class="stuff cc" height="600" width="960" src="/cc_browser/embed?themeId=${
                        tid
                    }&userId=${uid}" style="border: 0px;"></iframe>`,
                    css: {
                        cursor: 'auto',
                    },
                    overlayCSS: {
                        cursor: 'auto',
                    }
                })
            }
            function openLVM() {
                jQuery("#getting_started_modal").block();
                jQuery.post("/api/getNewMovieId", d => {
                    getting_started_html_config.studio_data.flashvars.presaveId = getting_started_html_config.studio_data.flashvars.movieId || d;
                    jQuery("#getting_started_modal").unblock();
                    jQuery("#getting_started_modal").block({
                        message: toObjectString(getting_started_html_config.studio_attrs, getting_started_html_config.studio_data),
                        css: {
                            cursor: 'auto'
                        },
                        overlayCSS: {
                            cursor: 'auto'
                        }
                    });
                })
            }
            function yearSubmit() {
                $("#getting_started_modal").block();
                const data = Object.fromEntries(new URLSearchParams($("#year_input").serialize()));
                function experimentalConfirm() {
                    for (const i of [
                        "retro_times",
                        "business_times"
                    ]) {
                        const d = $(`#${i}`).find(`option[value="${data.year}"]`);
                        if (
                            d 
                            && d.data("is-experimental")
                        ) return confirm("NOTE: The year you selected is currently in it's experimental state right now. By clicking OK, you are understanding that the swf files included in that year are not stable for production use yet and are risking unstable performace from the SWF files included in the year you selected. Are you sure that you want to proceed to the next step without reconsidering first?");
                    }
                    return true;
                }
                if (experimentalConfirm()) switch (data.for) {
                    case "lvp": {
                        goTo('custom_lvp', (json_info, callback) => {
                            checkUserVideos(() => {
                                for (const i in data) getting_started_html_config.modalData[i] = data[i];
                                getting_started_html_config.custom_player_data.flashvars.storePath = `/static/tommy/2010/store/<store>`;
                                getting_started_html_config.custom_player_data.flashvars.clientThemePath = `/static/tommy/${
                                    parseInt(data.year) >= 2012 ? "2012" : data.year
                                }/<client_theme>`;
                                getting_started_html_config.custom_player_data.flashvars.v = data.year;
                                getting_started_html_config.custom_player_data.flashvars.movieOwnerId = userData.id || userData.uid;
                                getting_started_html_config.custom_player_data.flashvars.movieOwner = userData.displayName;
                                getting_started_html_config.custom_player_data.flashvars.thumbnailURL = `/movie_thumbs/${
                                    getting_started_html_config.player_data.flashvars.movieId
                                }.png`
                                getting_started_html_config.custom_player_data.flashvars.movieId = getting_started_html_config.player_data.flashvars.movieId;
                                getting_started_html_config.custom_player_attrs.data = `/static/animation/player.swf?v=${
                                    data.year
                                }`;
                                jQuery("#getting_started_modal").unblock();
                                callback(json_info);
                            })
                        });
                        break;
                    }
                } else {
                    $("#getting_started_modal").unblock();
                    $("#getting_started_modal").block({
                        message: $("#year_input"),
                        css: {
                            cursor: 'auto'
                        },
                        overlayCSS: {
                            cursor: 'auto'
                        }
                    });
                }
            }
            function switchLvp2(where) {
                switch (where) {
                    case "custom": {
                        $("#year_input_data_for").val('lvp');
                        $("#getting_started_modal").block({
                            message: $("#year_input"),
                            css: {
                                cursor: 'auto'
                            },
                            overlayCSS: {
                                cursor: 'auto'
                            }
                        });
                        break;
                    } case "normal": {
                        goTo('lvp');
                        break;
                    }
                }
            }
            function getThemes() {
                return new Promise((res, rej) => {
                    jQuery.getJSON("/api/themes/get", d => res(d.filter(i => !i.attr.isHidden)));
                })
            }
            function tutInit(obj) {
                $("#getting_started_modal").block();
                const modalData = Object.fromEntries(
                    new URLSearchParams($("#getting_started_modal").serialize())
                );
                getting_started_html_config.jsonData = {
                    elem: $("#yearInput").find(`option[value="${modalData.year}"]`)
                }
                function empty() {
                    $("#tutStuff").empty()
                    $("#getting_started_modal").unblock();
                }
                if (modalData.year != "2010") empty();
                else (async () => {
                    const charIds = {};
                    for (const v of await getThemes()) charIds[v.attr.id] = v.attr.cc_theme_id;
                    $.post("/api/getChars", {
                        userId: userData.id || userData.uid,
                        cc_theme_id: charIds[obj ? $(obj).val() : modalData.theme] || "family",
                    }, e => {
                        const d = JSON.parse(e);
                        if (d[0] && !d[0].error && d[0].id) $(
                            "#tutStuff"
                        ).html(`<center><h1>Select A Character</h1></center><br><div id="row_chars" class="row">${
                            d.map(v => `<div class="col-md-2" title="${v.title}"><input id="${v.id}" type="radio" name="tutchar" value="${
                                v.id
                            }" style="float: left;"/><img src="${v.head_url}"/></div>`).join("")
                        }</div>`)
                        else $("#tutStuff").html(
                            d 
                            && d[0] 
                            && d[0].error 
                            ? d[0].error 
                            : "You have not created any characters for this theme yet."
                        );
                        $("#getting_started_modal").unblock();
                    });
                })();
            }
            function tutoogle() {
                const modalData = Object.fromEntries(
                    new URLSearchParams($("#getting_started_modal").serialize())
                );
                getting_started_html_config.jsonData = {
                    elem: $("#yearInput").find(`option[value="${modalData.year}"]`)
                }
                $("#tutStuff")[modalData.tutorial == "on" ? "show" : "hide"]();
            }
            function newAnimation() {
                getting_started_html_config.custom_studio_data.flashvars.movieId = "";
                goTo('custom_lvm_themes_selector');
            }
            function onSwfChange(obj) {
                getting_started_html_config.custom_studio_attrs.data = `/static/tommy/${
                    getting_started_html_config.modalData.year
                }/animation/${$(obj).val()}`;
                getting_started_html_config.custom_studio_data.flashvars.file = $(obj).val();
                $(".getting_started_custom_lvm_video_maker").html(
                    toObjectString(
                        getting_started_html_config.custom_studio_attrs, 
                        getting_started_html_config.custom_studio_data
                    )
                )
            }
            function customLVMFullScreen() {
                const modalData = Object.fromEntries(
                    new URLSearchParams($("#getting_started_modal").serialize())
                );
                const elem = $("#yearInput").find(`option[value="${modalData.year}"]`);
                window.location.href = `/go_full?${$("#getting_started_modal").serialize()}&swfPath=/static/tommy/${
                    modalData.year
                }/animation/${elem.data("fullscreen-apath") || "go_full.swf"}&storePath=/static/tommy/2010/store/<store>`;
            }
            function showGettingStartedModal(json) {
                jQuery.blockUI();
                (async () => {
                    const htmlConfig = await getHTMLInfoFromConfig(json);
                    for (const i in htmlConfig) {
                        jQuery('#getting_started_'+i).html(htmlConfig[i]);
                    }
                    function tHTML(tJSON) {
                        if (getting_started_html_config.current.startsWith("char_")) return tJSON.filter(
                            i => i.attr.cc_theme_id
                        ).map(v => `<option value="${v.attr.cc_theme_id}">${v.attr.name}</option>`).join("")
                        return tJSON.map(v => `<option id="${v.attr.id}" value="${v.attr.id}" data-charTid="${
                            v.attr.cc_theme_id
                        }">${v.attr.name}</option>`).join("")
                    }
                    if (
                        $("#getting_started_modal").find(".modal-dialog").hasClass("custom_studio")
                    ) $("#getting_started_modal").find(".modal-dialog").removeClass("custom_studio");
                    switch (getting_started_html_config.current) {
                        case "char_themes_selector": 
                        case "themes_selector": 
                        case "custom_lvm_themes_selector": {
                            const themes = await getThemes();
                            $("#themes_selector").html(tHTML(themes));
                            switch (getting_started_html_config.current) {
                                case "custom_lvm_themes_selector": {
                                    $("#other_options_custom_lvm").html(`
                                        <label style="margin: 30px;">
                                            /static/animation/old_full.swf?v=<select onchange="tutInit()" name="year" id="yearInput">
                                                <option value="2010" data-fullscreen-apath="457/old_full.swf" data-old-stuffs='[
                                                    {
                                                        "month": "May",
                                                        "paths": [
                                                            "old_full.swf",
                                                            "erfhuhijfewhe.swf",
                                                            "olad_full.swf",
                                                            "old_full copy 2.swf",
                                                            "old_full copy.swf"
                                                        ]
                                                    }
                                                ]'>2010</option>
                                                <option value="2011" data-old-stuffs='[
                                                    {
                                                        "month": "September",
                                                        "paths": [
                                                            "old_full.swf",
                                                            "FIXEDDDD.swf",
                                                            "go_full.swf",
                                                            "old_full copy 2.swf",
                                                            "old_full copy.swf",
                                                            "ollld_full.swf"
                                                        ]
                                                    }
                                                ]'>2011</option>
                                                <option value="2011b" data-is-experimental="true">2011b</option>
                                                <option value="2012" data-fullscreen-apath="old_full.swf~/old_full.swf" data-old-stuffs='[
                                                    {
                                                        "month": "Feburary",
                                                        "paths": [
                                                            "old_full.swf",
                                                            "guy.swf",
                                                            "KL.swf"
                                                        ]
                                                    },
                                                    {
                                                        "month": "September",
                                                        "paths": [
                                                            "go_full.swf"
                                                        ]
                                                    }
                                                ]'>2012</option>
                                                <option value="2013" data-old-stuffs='[
                                                    {
                                                        "month": "September",
                                                        "paths": [
                                                            "old_full.swf",
                                                            "ld_full.swf",
                                                            "go_full.swf"
                                                        ]
                                                    },
                                                    {
                                                        "month": "August",
                                                        "paths": [
                                                            "old_full_2013.swf"
                                                        ]
                                                    }
                                                ]'>2013</option>
                                                <option value="2014" data-old-stuffs='[
                                                    {
                                                        "month": "January",
                                                        "paths": [
                                                            "old_full.swf",
                                                            "aaaa.swf"
                                                        ]
                                                    },
                                                    {
                                                        "month": "April",
                                                        "paths": [
                                                            "go_full.swf"
                                                        ]
                                                    }
                                                ]'>2014</option>
                                                <option value="2015">2015</option>
                                                <option value="2016">2016</option>
                                            </select>
                                        </label>
                                        <div style="float: left;">
                                            <label for="tutoogle" style="float: left;">
                                                Tutorial <input id="tutoggle" type="checkbox" onchange="tutoogle()" name="tutorial"/>
                                            </label>
                                        </div>
                                        <div style="float: right;">
                                            <a href="javascript:customLVMFullScreen()">Full Screen</a>
                                        </div>
                                        <div id="tutStuff" style="display: none;"></div>
                                    `);
                                    tutInit();
                                    break;
                                }
                            }
                            break;
                        } case "custom_lvm": {
                            const dat = getting_started_html_config.modalData;
                            interactiveTutorial.isShowTutorial = dat.tutorial == "on";
                            function experimentalConfirm() {
                                return getting_started_html_config.jsonData.elem.data("is-experimental") ? confirm(
                                    'You are trying to access a studio that isn\'t stable and is currently under developer testing right now meaning that it is not yet ready for production use yet. Are you sure that you want to take all of the risks by using this studio?'
                                ) : true
                            }
                            if (dat.year == "2010" && interactiveTutorial.isShowTutorial && !dat.tutchar) {
                                interactiveTutorial.isShowTutorial = interactiveTutorial.show_by_default;
                                go('prev');
                                alert("You need to select a character to use for the 2010 lvm tutorial.");
                            } else if (experimentalConfirm()) jQuery.post("/api/getNewMovieId", d => {
                                $("#getting_started_modal").find(".modal-dialog").addClass("custom_studio");
                                if (getting_started_html_config.jsonData.elem.data("old-stuffs")) {
                                    var html = '<label>Filename: <select onchange="onSwfChange(this)">';
                                    for (const stuff of getting_started_html_config.jsonData.elem.data("old-stuffs")) {
                                        html += `<optgroup label="${stuff.month}">`;
                                        for (const path of stuff.paths) {
                                            html += `<option value="${path}">${path}</option>`;
                                        }
                                        html += '</optgroup>';
                                    }
                                    $("#old_stuffs_selector").html(html + '</select></label>').show();
                                }
                                getting_started_html_config.custom_studio_attrs.data = `/static/tommy/${dat.year}/animation/old_full.swf`;
                                getting_started_html_config.custom_studio_data.flashvars.storePath = `/static/tommy/2010/store/<store>`;
                                getting_started_html_config.custom_studio_data.flashvars.clientThemePath = `/static/tommy/${
                                    dat.year
                                }/<client_theme>`;
                                getting_started_html_config.custom_studio_data.flashvars.movieId = getting_started_html_config.custom_player_data.flashvars.movieId || "";
                                getting_started_html_config.custom_studio_data.flashvars.presaveId = getting_started_html_config.custom_player_data.flashvars.movieId || d
                                getting_started_html_config.custom_studio_data.flashvars.studio = dat.year
                                getting_started_html_config.custom_studio_data.flashvars.file = 'old_full.swf'
                                getting_started_html_config.custom_studio_data.flashvars.v = dat.year
                                getting_started_html_config.custom_studio_data.flashvars.tray = dat.theme;
                                getting_started_html_config.custom_studio_data.flashvars.tm = interactiveTutorial.isShowTutorial ? "NEW" : "FIN";
                                getting_started_html_config.custom_studio_data.flashvars.tmcc = dat.tutchar || "";
                                getting_started_html_config.custom_studio_data.flashvars.userId = userData.id || userData.uid;
                                $(".getting_started_custom_lvm_video_maker").html(
                                    toObjectString(
                                        getting_started_html_config.custom_studio_attrs, 
                                        getting_started_html_config.custom_studio_data
                                    )
                                )
                            });
                            else go('prev');
                        } case "cc": {
                            function setupCC() {
                                if (jQuery(".getting_started_char_creator")) {
                                    if (jQuery.flash.available) jQuery(".getting_started_char_creator").html(`You need to click <a href="javascript:openCC('${getting_started_html_config.modalData.theme}', '${userData.uid || userData.id}')">here</a> in order to use the CC.`);
                                    else jQuery(".getting_started_char_creator").html("You need Adobe Flash Player in order to use the CC.");
                                    clearInterval(loop);
                                }
                            }
                            var loop = setInterval(setupCC, 1);
                            break;
                        } case "lvm": {
                            getting_started_html_config.studio_data.flashvars.tray = getting_started_html_config.modalData.theme;
                            getting_started_html_config.studio_data.flashvars.userId =  userData.uid || userData.id;
                            function setupStudio() {
                                if (jQuery(".getting_started_video_maker")) {
                                    if (jQuery.flash.available) jQuery(".getting_started_video_maker").html("You need to click <a href='javascript:openLVM()'>here</a> in order to use the LVM.");
                                    else jQuery(".getting_started_video_maker").html("You need Adobe Flash Player in order to use the LVM.");
                                    clearInterval(loop);
                                }
                            }
                            var loop = setInterval(setupStudio, 1);
                            break;
                        } case "custom_lvp": {
                            console.log(getting_started_html_config.custom_player_attrs, getting_started_html_config.custom_player_data)
                            jQuery(".getting_started_custom_video_player").html(
                                toObjectString(getting_started_html_config.custom_player_attrs, getting_started_html_config.custom_player_data)
                            );
                            break;
                        } case "lvp": {
                            function setupPlayer() {
                                if (jQuery(".getting_started_video_player") && jQuery("#edit_video")) {
                                    if (jQuery.flash.available) jQuery(".getting_started_video_player").html(
                                        toObjectString(getting_started_html_config.player_attrs, getting_started_html_config.player_data)
                                    );
                                    else jQuery(".getting_started_video_player").html("You need Adobe Flash Player in order to use the LVP.");
                                    clearInterval(loop);
                                }
                            }
                            var loop = setInterval(setupPlayer, 1);
                            break;
                        } case "video_management": {
                            $(".getting_started_user_videos").html(`<thead>
                                <tr>
                                    <td>Video Title</td>
                                    <td>Last Modified</td>
                                    <td>Actions</td>
                                </tr>
                            </thead>
                            <tbody>${movies.map(e => {
                                return `<tr><td><a href="javascript:showMyVideo('${
                                    e.id
                                }')">${e.title}</a></td><td>${
                                    new Date(e.date).toLocaleDateString()
                                }</td><td><a href="javascript:shareMyVideo('${
                                    e.id
                                }')">Share Video</a> | <a href="javascript:deleteVideo('${
                                    e.id
                                }')">Delete Video</a></td> </tr>`;
                            })}</tbody>`);
                            break;
                        }
                    }
                    jQuery.unblockUI();
                    $("#getting_started_modal").modal('show');
                })();
            }
        </script>
        <form id="year_input" style="display: none;">
            <input type="hidden" id="year_input_data_for" name="for"/>
            <center>
                <h1><a style="float: right;" href="javascript:;" onclick="jQuery('#getting_started_modal').unblock()">&times;</a></h1><br>
                <h3>Please select an lvm year.</h3><br>
                <select name="year">
                    <optgroup label="The Retro Times" id="retro_times">
                        <option value="2010">2010</option>
                        <option value="2011">2011</option>
                        <option value="2011b" data-is-experimental="true">Mid 2012 (EXPERIMENTAL)</option>
                        <option value="2012">Late 2012</option>
                    </optgroup>
                    <optgroup label="The Business Times" id="business_times">
                        <option value="2013">2013</option>
                        <option value="2014">2014</option>
                        <option value="2015">2015</option>
                        <option value="2016">2016</option>
                    </optgroup>
                </select><br>
                <a href="javascript:yearSubmit()" class="btn btn-orange">Submit</a>
            </center>
        </form>
        <div class="page-container">
            <!-- HEADER -->
            <%- include("includes/header.ejs", {
                isVideoList: false
            }); %>
            <!-- END OF HEADER -->
            <h2>Getting Started</h2>
            <div class="alert alert-info">
                <h3>Welcome To Nexus's Interactive Getting Started Guide!</h3>
                <p>To proceed with the steps, please click on the Start Now button to get started</p><br>
                <button class="btn btn-orange" onclick="showGettingStartedModal()">Start Now ></button>
            </div>
        </div>
    </body>
</html>