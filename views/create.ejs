<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <link rel="dns-prefetch" href="/">
        <title>Create - GoNexus</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="https://www.w3schools.com/w3css/4/w3.css" rel="stylesheet" type="text/css">
        <link href="/ui/css/common_combined.css" rel="stylesheet" type="text/css">
        <link href="/ui/css/videomaker.css" rel="stylesheet" type="text/css">
        <script src="/js/common_combined.js"></script>
        <style>
            #other-options,
            #tutorial-chars,
            #studio-eras {
                display: grid;
                grid-template-columns: auto auto auto auto;
                gap: 10px;
                padding: 10px;
            }
            .tutorial-char,
            #grid-item,
            .studio-build {
                background-color: rgba(255, 255, 255, 0.8);
                text-align: center;
            }
            .tutorial-char-active,
            .studio-build-active {
                background-color: rgb(0, 38, 255);
                text-align: center;
            }
            @font-face {
                font-family: 'Lato';
                font-style: normal;
                font-weight: 400;
                src: local('Lato Regular'), local('Lato-Regular'), url(/ui/fonts/qIIYRU-oROkIk8vfvxw6QvesZW2xOQ-xsNqO47m55DA.woff) format('woff');
            }
            @font-face {
                font-family: 'Lato';
                font-style: normal;
                font-weight: 700;
                src: local('Lato Bold'), local('Lato-Bold'), url(/ui/fonts/qdgUG4U09HnJwhYI-uK18wLUuEpTyoUstqEm5AMlJo4.woff) format('woff');
            }
            .preview-button {
                background-image: linear-gradient(rgb(182, 176, 176), rgb(43, 42, 42));
                border: 0;
                border-radius: 4px;
                color: #fff;
                cursor: pointer;
                display: inline-block;
                font-size: 14px;
                font-weight: bold;
                line-height: 36px;
                padding: 0 25px;
                margin:0 7px
            }
            .preview-button:hover {
                color: blue;
            }
        </style>
    </head>
    <body class="page-action-videomaker">
        <div class="modal" id="studioBlock">
            <div class="modal-dialog" style="width: 991px;">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" id="closeStudio">
                            <span aria-hidden="true">&times;</span>
                            <span class="sr-only">Close</span>
                        </button>
                        <h2 class="modal-title">Custom LVM</h2>
                    </div>
                    <div class="modal-body" id="studiodiv">You need Adobe Flash Player in order to use the Custom LVM</div>
                </div>
            </div>
        </div>
        <div class="modal" id="templatesModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">
                            <span aria-hidden="true">&times;</span>
                            <span class="sr-only">Close</span>
                        </button>
                        <h2 class="modal-title"><span id="template_theme"></span> Templates</h2>
                    </div>
                    <div class="modal-body btn-group btn-group-lg" role="group" id="templates" aria-label="..."></div>
                </div>
            </div>
        </div>
        <div class="modal" id="customLVM">
            <div class="modal-dialog modal-lg">
                <form class="modal-content" action="javascript:;" id="createVideoForm">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">
                            <span aria-hidden="true">&times;</span>
                            <span class="sr-only">Close</span>
                        </button>
                        <h2 class="modal-title">Custom LVM</h2>
                    </div>
                    <p id="error-message-lvmSelector" style="color: red;"></p>
                    <center class="modal-body">
                        <p>In order to use a custom LVM in your video, please select a year and filename of any LVM below.</p>
                        <label>Year: <select id="customlvmyear" onchange="selectLVM()"></select></label><br>
                        <label>File: <select name="customlvmfile"></select></label>
                        <br>
                    </center>
                    <script>
                        var nexus_devs = [
                            {
                                name: "Works Perfectly",
                                people: [
                                    {
                                        name: "Joseph",
                                        id: "4048901"
                                    },
                                    {
                                        name: "Rage (Side Dev)",
                                        id: "0000000"
                                    },
                                    {
                                        name: "Owen",
                                        id: "4635901"
                                    },
                                    {
                                        name: "2010 LVM Tutorial Woman (Not a dev but added her to bring back nostalgia)",
                                        id: "4715202"
                                    },
                                    {
                                        name: "2010 LVM Tutorial Woman From FlashThemes (Not a dev)",
                                        id: "123"
                                    },
                                    {
                                         name: "David Escobar (Not a dev but added him cuz why not)",
                                         id: "192"
                                    },
                                    {
                                         name: "Daniel (Not a dev but added him cuz why not)",
                                         id: "666"
                                    },
                                    {
                                        name: "BluePeacocks",
                                        id: "60897073"
                                    },
                                    {
                                        name: "Jyvee",
                                        id: "66670973"
                                    }
                                ]
                            },
                            {
                                
                                name: "Does Not Work",
                                people: [
                                    {
                                        disabled: true,
                                        name: "Jerry",
                                        id: ""
                                    }
                                ]
                            },
                            {
                                disabled: true,
                                name: "Work In Progress",
                                people: []
                            }
                        ]
                    </script>
                    <center class="modal-footer">
                        <h2>Other options</h2>
                        <div id="other-options">
                            <p id="grid-item" class="tutorial">
                                Tutorial <input type="checkbox" name="tutorial" onclick="tutCharOption(studio)">
                            </p>
                            <p id="grid-item" class="widescreen">Widescreen <input type="checkbox" name="widescreen" checked></p>
                            <div id="grid-item" class="tutorialchar2010" style="display: none;">
                                <h4>Select Your Character To Use For The 2010 LVM Tutorial</h4><br>
                                <p>Because the 2010 lvm tutorial only supports the characters from Comedy World, you will only be allowed to select any characters from Comedy World. <br>
                                    we are not sure if the 2010 lvm tutorial also supports characters from other themes. <br>
                                    but for now, this is what we are doing.
                                </p><br>
                                <script>
                                    document.write(`<label for="devs_selector">GoNexus Developers <select id="devs_selector">
                                        <option value="">Select A Developer</option>
                                        ${
                                            nexus_devs.map(oi => {
                                                if (oi.people) return `<optgroup label="${oi.name}" ${oi.disabled ? 'disabled' : ''}>${
                                                    oi.people.map(v => `<option value="${
                                                        v.id
                                                    }" ${v.disabled ? 'disabled' : ''}>${v.name}</option>`)
                                            }</optgroup>`;
                                            else return `<option value="${oi.id}" ${oi.disabled ? 'disabled' : ''}>${oi.name}</option>`;
                                        })}</select>
                                    </label><br>`);
                                </script>
                                <label>Custom Characters</label>
                                <div id="tutorial-chars"></div>
                            </div>
                        </div>
                        <div id="lvmmode">
                            <p>Mode</p>
                            <select name="lvmmode">
                                <option value="block">Modal Window</option>
                                <option value="full">Full Screen</option>
                            </select>
                        </div>
                        <div id="ct2010" style="display: none;">
                            <p>LVM Style</p>
                            <select name="ct2010">
                                <option value="">Normal</option>
                                <option value="domo">Domo</option>
                                <option value="cn">Cartoon Network</option>
                            </select>
                        </div>
                        <div id="ct2012" style="display: none;">
                            <p>Color Theme</p>
                            <select name="ct2012">
                                <option value="go">Dark</option>
                                <option value="silver" selected>Silver</option>
                            </select>
                        </div><br>
                        <button onclick="(() => {
                            $('#customLVM').block()
                            $('#error-message-lvmSelector').text('');
                            studio = $('#customlvmyear').val();
                            newCustomLVMAnimation(Object.fromEntries(new URLSearchParams($('#createVideoForm').serialize())));
                        })()" class="btn btn-orange">Create a Video</button>
                    </center>
                </form>
            </div>
        </div>
        <div class="modal" id="studioLoading">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title">Loading The Studio...</h2>
                    </div>
                    <div class="modal-body">Please wait until we are done loading the studio.</div>
                </div>
            </div>
        </div>
        <div id="import_popup_container" class="lightbox" style="display:none;width:725.6px;height:549px;">
            <a style="float: right;" href="javascript:;" onclick="jQuery('#studiodiv').unblock();">×</a>
            <div id="importerdiv"></div>
        </div>
        <div id="previewPlayerContainer" class="lightbox" style="display: none; width: 700px;">
            <div class="lightbox_wrapper">
                <h5>Preview Video <a style="float: right;" href="javascript:;" onclick="jQuery('#studiodiv').unblock();">×</a></h5>
                <div id="playerdiv"></div>
                <div style="margin-bottom: auto;">
                    <button class="preview-button" onclick="jQuery('#studiodiv').unblock();">< Back to editing</button>
                    <button class="preview-button" style="float: right;" onclick="jQuery('#studiodiv').unblock(); jQuery(
                        '#Studio'
                    )[0].onExternalPreviewPlayerPublish()">Save Now ></button>            
                </div>
            </div>
        </div>
        <%- include("includes/header.ejs", {
            isVideoList: true
        }) %>
        <div class="container">
            <div class="create-header">
                <h1 class="h3">Select a Theme</h1>
            </div>
            <% let rowCount = 1, themesCount = 0; %>
            <% const rowsDisplayed = {}; %>
            <% for (const i in params.themes) { %>
                <% if (!rowsDisplayed[rowCount]) { %>
                    <div class="themes row" id="themes_row_<%= rowCount %>"></div>
                    <% rowsDisplayed[rowCount] = true; %>
                <% } %>
                <% if ((i & 1) == 0) themesCount++; %>
                <% if (themesCount == 2) rowCount++, themesCount = 0 %>
            <% } %>
        </div>
        <% if (!isLocalhost) { %>
            <script src="https://fireanimate-eb62d.firebaseapp.com/__/firebase/6.2.4/firebase-app.js"></script>
            <script src="https://fireanimate-eb62d.firebaseapp.com/__/firebase/6.2.4/firebase-auth.js"></script>
            <script src="https://fireanimate-eb62d.firebaseapp.com/__/firebase/init.js"></script>
            <script src="/js/user.js"></script>
        <% } %>
        <script>
            function showTemplates(stuff) {
                $("#template_theme").text(stuff.split(".")[0]);
                $("#templates").html(stuff.split(".")[1].split(",").map(info => {
                    return `<a type="button" class="btn btn-default" href="/quickvideo?theme=${info}">${info}</a>`
                }));;
                $("#templatesModal").modal('show')
            }
            let customlvmfiles = {

            }, tId, tmcId, studio = "2016", chars = [

            ], hasChars = false, themes = [

            ], loadingStudio = false, previewerMovieXML, previewerFlashvars;
            function showImporter() {
                jQuery("#importerdiv").flash({
                    id: "StudioImporter",
                    swf: `/animation/2010/importer copy.swf`,
                    width: "725",
                    height: "519",
                    align: "middle",
                    allowScriptAccess: "always",
                    allowFullScreen: "true",
                    wmode: "window",
                    hasVersion: "10.3",
                    style: "margin-left: -10px;",
                    flashvars: {
                        apiserver: window.location.origin + "/",
                        ut: 10,
                        appCode: "go",
                        userId: userData.uid || userData.id
                    }
                });
                showOverlayOnElement("#studiodiv", $("#import_popup_container"));
            }
            function retrievePreviewPlayerData() {
                return previewerMovieXML;
            }
            function initPreviewPlayer(dataXmlStr, startFrame) {
                previewerMovieXML = dataXmlStr;
                if (typeof startFrame == 'undefined') {
                    startFrame = 1;
                } else {
                    startFrame = Math.max(1, parseInt(startFrame));
                }
                jQuery("#playerdiv").flash({
                    id: "Player",
                    swf: `/animation/${studio}/player.swf`,
                    width: "640",
                    height: "360",
                    allowScriptAccess: "always",
                    flashvars: {
                        isPreview: 1,
                        appCode: "go",
                        apiserver: window.location.origin + "/",
                        isEmbed: 1,
                        tlang: "en_US",
                        isInitFromExternal: 1,
                        startFrame,
                        autostart: 1,
                        storePath: "/static/store/<store>",
                        clientThemePath: `/static/tommy/2012/<client_theme>`,
                    }
                });
                showOverlayOnElement("#studiodiv", jQuery("#previewPlayerContainer"));
            }
            if ((new URLSearchParams(window.location.search)).get("lvm") && (new URLSearchParams(window.location.search)).get("tId")) {
                $("#studioLoading").modal({
                    keyboard: false,
                    backdrop: "static"
                })
                tId = (new URLSearchParams(window.location.search)).get("tId");
                studio = (new URLSearchParams(window.location.search)).get("lvm");
                loadingStudio = true;
            }
            const interactiveTutorial = {
                hideTutorial: true,
                neverDisplay() {
                    return this.needToShow();
                },
                needToShow: function() {
                    return !this.hideTutorial
                }
            }
            function selectLVM() {
                studio = $("#customlvmyear").val();
                $('select[name="customlvmfile"]').html(customlvmfiles[studio].map(v => `<option value="${v}">${v}</option>`));
                $("#error-message-lvmSelector").text('');
                tutCharOption(studio);
                if (studio == '2010') {
                    $(".widescreen").hide();
                    $("#ct2010").show();
                    $("#ct2012").hide();
                } else if (studio == '2011' || studio == '2012' || studio == '2013') {
                    $(".widescreen").show();
                    $("#ct2010").hide();
                    $("#ct2012").show();
                } else {
                    $(".widescreen").show();
                    $("#ct2010").hide();
                    $("#ct2012").hide();
                }
            }
            function lvmSelectorError(msg) {
                $("#customLVM").unblock()
                location.href = "#createVideoForm"
                $("#error-message-lvmSelector").text(msg);
            }
            function newCustomLVMAnimation(json) {
                if (
                    studio == '2010' && json.tutorial && !($('#devs_selector').val() || tmcId)
                ) lvmSelectorError('Please select a character to use in the 2010 LVM tutorial');
                else if (json.lvmmode == "block") jQuery.post('/api/getNewMovieId', d => {
                    /*if (studio == "2010" && window.location.host.startsWith("localhost") && tId != "retro") {
                        const themeInfo = themes.find(i => i.id == tId);
                        lvmSelectorError(`due to the crossdomain.xml file not being fetched correctly while using localhost, ${
                            themeInfo.name
                        } does not want to work in the 2010 LVM while you use localhost. Please try using GoNexus online for better results.`);
                        return;
                    }*/
                    interactiveTutorial.hideTutorial = json.tutorial ? false : true;
                    window.onbeforeunload = function(e) {
                        var e = e || window.event;
                        if (e) e.returnValue = 'You are about to lose all your unsaved changes in the studio.';
                    };
                    const flashvars = {
                        pts: 1,
                        upl: 1,
                        hb: 1,
			            appCode: "go",
			            uisa: studio == "2010" ? 1 : 0,
			            isLogin: "Y",
			            tlang: "en_US",
			            isEmbed: 0,
			            isWide: json.widescreen == "on" ? 1 : 0,
			            nextUrl: "/api/redirect",
                        siteId: "school",
			            ut: 20,
                        apiserver: window.location.origin + "/"
                    }
                    flashvars.studio = studio;
                    flashvars.userId = userData.uid || userData.id;
                    flashvars.presaveId = d;
                    if (studio == "2010") {
                        if (json.ct2010) flashvars.ctc = json.ct2010; 
                        if (json.tutorial) flashvars.tmcc = $('#devs_selector').val() || tmcId;
                    } else {
                        flashvars.lid = 11;
                        flashvars.ctc = "go";
                        flashvars.storePath = `/static/store/<store>`;
                        flashvars.clientThemePath = `/static/tommy/${$("#customlvmyear").val() || json.year}/<client_theme>`;
                        flashvars.themeColor = json.ct2012;
                        flashvars.has_asset_char = 1;
                    }
                    flashvars.tm = json.tutorial ? "SEMI" : "FIN";
                    flashvars.tray = tId;
                    jQuery("#studiodiv").flash({
                        id: "Studio",
                        swf: `/animation/${$("#customlvmyear").val() || json.year}/${json.customlvmfile}`,
                        width: "959",
                        height: "630",
                        align: "middle",
                        allowScriptAccess: "always",
                        allowFullScreen: "true",
                        wmode: "window",
                        hasVersion: "10.3",
                        flashvars
                    });
                    $("#customLVM").unblock().modal('hide');
                    $("#studioBlock").modal({
                        keyboard: false,
                        backdrop: "static"
                    });
                }); 
                else location.href = `/go_full?y=${studio}&isWide=${
                    json.widescreen == "on" ? '1' : '0'
                }&tutorial=${json.tutorial == "on" ? true : false}&tray=${tId}`
                $("#closeStudio").on("click", () => {
                    closeStudio();
                    $("#closeStudio").off("click");
                });
            }
            function closeStudio() {
                $("#studioBlock").modal('hide');
                window.onbeforeunload = function(e) {
                    return null;
                };
            }
            function setupCustomLVM(d) {
                jQuery.blockUI();
                tId = d;
                let years = '';
                jQuery.post("/api/getCustomLVMFileSystemTree", d => {
                    for (const i in d) {
                        if (i.length != 4) continue;
                        customlvmfiles[i] = [];
                        if (studio == i) years += `<option value="${i}" selected>${i}</option>`;
                        else years += `<option value="${i}">${i}</option>`;
                        for (const g in d[i]) if (g.endsWith("swf")) customlvmfiles[i].push(g);
                    }
                    $("#customlvmyear").html(years);
                    setTimeout(selectLVM, 200);
                    $("#customLVM").modal('show')
                    jQuery.unblockUI();
                })
            }
            jQuery.getJSON("/api/themes/get", (d) => {
                const counts = {
                    normal: 0,
                    rows: 1
                }
                const githubBranch = '1ea6ff3d5d8b1cff8148745784632fa1fef8399a';
                const githubUrl = `https://raw.githubusercontent.com/Wrapper-Offline/Wrapper-Offline/${githubBranch}/server/pages/img/themes/`;
                for (const theme of d) {
                    if (theme.attr.isHidden == "1") continue;
                    themes.push(theme.attr);
                    const elem = `<div class="col-sm-6 col-md-4 col-lg-4">
                        <div class="theme" id="thm-${theme.attr.id}">
                            <div class="theme-cell">
                                <div class="theme-cover launch">
                                    <img src="${
                                        theme.attr.imageUrl ? theme.attr.imageUrl : `${githubUrl}${theme.attr.id}.${theme.attr.ext}`
                                    }" alt="${theme.attr.name}">
                                </div>
                                <div class="theme-meat">
                                    <div class="apps">
                                        <h3>${theme.attr.name}</h3>
                                        ${!theme.attr.only_show_options || theme.attr.only_show_options.includes(
                                            "studio"
                                        ) ? `<a class="btn btn-orange" href="/go_full?tray=${
                                            theme.attr.id
                                        }" title="" data-original-title="LVM">Make a Video</a>
                                        <a class="btn btn-default" title="" data-original-title="Custom LVM" onclick="setupCustomLVM('${
                                            theme.attr.id
                                        }')">Custom LVM
                                        </a>` : ''}
                                        ${
                                            (
                                                !theme.attr.only_show_options || theme.attr.only_show_options.includes("charCreator")
                                            ) && theme.attr.cc_theme_id ? `<a class="btn btn-default" 
                                                href="/cc_browser?themeId=${
                                                    theme.attr.cc_theme_id
                                                }" title="" data-original-title="Character Creator">
                                                <i class="i-cc"></i>
                                            </a>` : ''
                                        }
                                        ${
                                            (
                                                !theme.attr.only_show_options || theme.attr.only_show_options.includes("qvm")
                                            ) && (
                                                theme.attr.qvm || theme.attr.qvm_url
                                            ) ? !theme.attr.qvm?.includes(",") ? `<a class="btn btn-default" 
                                                href="${
                                                    theme.attr.qvm_url ? theme.attr.qvm_url : `/quickvideo?theme=${theme.attr.qvm}`
                                                }" title="" 
                                                data-original-title="QVM Template"><i class="i-qvm"></i>
                                            </a>` : `<button class="btn btn-default" onclick="showTemplates(\`${
                                                theme.attr.name
                                            }.${
                                                theme.attr.qvm
                                            }\`)" title="" data-original-title="QVM Template"><i class="i-qvm"></i></button>` : ''
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`;
                    if (counts.normal >= 3) {
                        counts.normal = 0;
                        counts.rows++;
                    }
                    $(`#themes_row_${counts.rows}`).append(elem);
                    counts.normal++
                }
            });
            function tutCharOption(s) {
                if (s == "2010") {
                    $("#lvmmode").hide();
                    if (!window.location.host.startsWith("localhost")) {
                        $("input[name='tutorial']").prop("checked") ? $(".tutorialchar2010").show() : $(".tutorialchar2010").hide()
                        if (chars.length == 0) $("#tutorial-chars").html(`<p id="grid-item">
                            Either you have not created any characters yet or a char head image does not exist for your character.
                            To check, follow these steps:
                            <ol>
                                <li>
                                    Go into the <strong>Character Icon</strong> on the LVM. Once there, the Custom Characters should load by default. 
                                    If the Stock Characters load by default or theres nothing in the tray, 
                                    then that means that you have not created any characters.
                                </li>
                                <li>
                                    Go into the Quick Video Maker and scroll to step 2 where you can click a link below either character called <strong>
                                        Use your own character
                                    </strong>. Once there, you will be able to tell whatever or not a thumb or head image exists for your characters.
                                    Normally, after you create a character, A char thumb or head image comes saved with your character. 
                                    If not, then you may have most likely done the following things with a character:
                                    <ul>
                                        <li>
                                            You used some of your gopoints to buy a custom character in the studio witch after 
                                            purchace is complete, a char thumb or head image does not come with your character for some 
                                            reason even though the older Character Creators came with a feature to pack a thumb and head image 
                                            for your character after saving is complete.
                                        </li>
                                    </ul>
                                </li>
                            </ol>
                        </p>`);
                        tmcId = $('#devs_selector').val();
                    } else $(".tutorial").hide();
                } else {
                    $("#lvmmode").show();
                    $(".tutorialchar2010").hide()
                    $(".tutorial").show();
                }
            }
            function reloadCCListForTut() {
                jQuery.ajax({
                    url: '/api/assets/get/theme/ugc',
                    type: 'POST',
                    data: { 
                        type: "char",
                        themeId: "family",
                        userId: userData.uid || userData.id
                    },
                    dataType: 'json',
                    success: function(data) {
                        chars = [];
                        $("#tutorial-chars").html('');
                        for (const cc of data) {
                            if (!cc.head_url) continue;
                            $("#tutorial-chars").append(`<a href="javascript:;" id="char${cc.id}" onclick="selectTutChar('${
                                cc.id
                            }')" class="tutorial-char"><img src="${cc.head_url}"><h2>${
                                cc.title
                            }</h2></a>`);
                            chars.unshift(cc);
                        }
                    }
                });
            }
            function selectTutChar(cId) {
                tmcId = cId;
                if ($(`#char${cId}`).hasClass("tutorial-char-active")) {
                    tmcId = $('#devs_selector').val();
                    $(`#char${cId}`).removeClass("tutorial-char-active").removeClass("tutorial-char");
                } else {
                    $(".tutorial-char-active").addClass("tutorial-char").removeClass("tutorial-char-active");
                    $(`#char${cId}`).addClass("tutorial-char-active").removeClass("tutorial-char");
                }
            }
        </script>
        <%- include("includes/footer.ejs") %>
    </body>
</html>
