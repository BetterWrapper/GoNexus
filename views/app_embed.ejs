<script src="/js/common_combined.js"></script>
<script>
    var flashvars;
    $.getJSON(`/api/convertUrlQuery2JSON?<%= flashvarsString %>`, (d) => {
        document.title = '<%= title %>';
        flashvars = JSON.parse(JSON.stringify(d).split("amp;").join(""));
    });
</script>
<body style="margin:0px">
    <%- object(attrs, params) %>
</body>
<% if (params.type == "cc") { %>
    <script>
        function characterSaved(id) {
            parent.characterSaved(id)
        }
    </script>
<% } else if (params.type == "go_full") { %>
    <iframe style="display: none" name="dummy"></iframe>
    <form style="display: none;" id="uploadbanner" enctype="multipart/form-data" method="post" action="/ajax/saveUserProp" target="dummy">
        <input type="text" name="subtype"/>
        <input id="fileupload" name="file" type="file" onchange="importComplete(
            this
        )" accept=".mp3,.wav,.png,.jpg"/><input type='submit'value='submit'id='submit'/>
    </form>
    <script>
        const interactiveTutorial = {
            isShowTutorial: parent.interactiveTutorial.isShowTutorial,
            neverDisplay: function(a) {
                if (a === undefined) {
                    return !this.needToShow()
                }
            },
            needToShow: function() {
                return this.isShowTutorial
            }
        };
        function studioLoaded(arg) {
            console.log(arg)
        }
        function initPreviewPlayer(xml) {
            confirm('Before proceeding, please make sure all your changes have been saved.');
            window.open('/player?movieId=' + flashvars.presaveId, 'MsgWindow', 'width=1280,height=723,left=' + (
                screen.width / 2 - 640
            ) + ',top=' + (
                screen.height / 2 - 360
            ))
        };
        function exitStudio(share) {
            parent.exitStudio(share);
        }
        function quitStudio() {
            parent.exitStudio();
        }
        const fu = document.getElementById('fileupload'),sub = document.getElementById('submit');
        function showImporter() {
            fu.click();
        };
        function importComplete(obj) {
            const file = obj.files[0];
            if (file != undefined) {
                const ext = file.name.substring(file.name.lastIndexOf('.') + 1);
                var params = '';
                if (ext == 'mp3' || ext == 'wav') {
                    var c;
                    while(c != 'vo' && c != 'se' && c != 'mu') {
                        c = prompt('Would you like to upload this as a voiceover (\"vo\"), sound effect (\"se\"), or as music (\"mu\")?').toLowerCase();
                    }
                    params += c;
                } else if (ext == 'jpg' || ext == 'png') {
                    var c;
                    while (c != 'bg' && c != 'prop') {
                        c = prompt('Would you like to upload this as a background (\"bg\") or as a prop (\"prop\")?').toLowerCase();
                    }
                    params += c;
                }
                obj.parentElement.firstChild.value = params;
                sub.click();
                return true;
            }
        }
    </script>
<% } %>